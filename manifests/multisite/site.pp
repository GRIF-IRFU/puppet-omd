/**
 * define a multisite site. The resource name is the check_mk site id. You can provide an alias for nice displays
 */

define omd::multisite::site(
  $site, #the is the omd site to add the *remote* (or local) "site" (multisite/livestatus) to. It must only contains letters, digits and underscores
  $host=$name, #the hostname or ipaddress that will be used in the autogenerated socket (if socket is not specified)
  $alias=$name,
  $socket=undef,
  $port=6557,
  $url_prefix=undef,
  $status_host=undef, #this usually is ('local','remote hostname') 
) {
  
  
  #make sure the base concat file is there
  ensure_resource('concat',"multisite_sites_${site}", { owner => "${site}",
      group => "${site}",
      mode => '644',
      path => "/opt/omd/sites/${site}/etc/check_mk/multisite.d/sites.mk",
      require => Exec["omd create site ${site}"]
   }
  )
  
  #also create the var empty, as a first run
  ensure_resource('concat::fragment',"multisite_sites_${site}_init", { target => "multisite_sites_${site}",
      content => "#\n# puppet-managed file. Do not edit\n#\nsites = {}\n",
      order => "000",
   }
  )
  
  #strip disallowed chars from the site name
  $sitename=regsubst($name,'[^a-zA-Z0-9_]','')
  
  #now, just add the site to the dict
  $sock_str = $socket ? {
    false => undef,
    default => "'socket': 'tcp:${host}:${port}',"
  }
  
  $url_str = $url_prefix ? {
    undef => undef,
    default => "'url_prefix': '${url_prefix}',"
  }
  
  $statush_str = $status_host ? {
    undef => undef,
    default => "'status_host': '${status_host}',"
  }
  
  #now, add the site using concat 
  concat::fragment{ "multisite_site_${alias}_on_${site}":
    target => "multisite_sites_${site}",
    content => "sites['${sitename}']={ 'alias': '${alias}' , ${sock_str} ${url_str} ${statush_str} }\n",
    order => "010",
  }
}
